// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/eos/eos.proto

package eos

import (
	context "context"
	fmt "fmt"
	math "math"

	"org_service/config/grpc/proto/domain"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetByIDRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIDRequest) Reset()         { *m = GetByIDRequest{} }
func (m *GetByIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetByIDRequest) ProtoMessage()    {}
func (*GetByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6634401e8d86e904, []int{0}
}

func (m *GetByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIDRequest.Unmarshal(m, b)
}
func (m *GetByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIDRequest.Marshal(b, m, deterministic)
}
func (m *GetByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIDRequest.Merge(m, src)
}
func (m *GetByIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetByIDRequest.Size(m)
}
func (m *GetByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIDRequest proto.InternalMessageInfo

func (m *GetByIDRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type NewProductRequest struct {
	Product              *domain.Product    `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	EosAccount           *domain.EosAccount `protobuf:"bytes,2,opt,name=eos_account,json=eosAccount,proto3" json:"eos_account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *NewProductRequest) Reset()         { *m = NewProductRequest{} }
func (m *NewProductRequest) String() string { return proto.CompactTextString(m) }
func (*NewProductRequest) ProtoMessage()    {}
func (*NewProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6634401e8d86e904, []int{1}
}

func (m *NewProductRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewProductRequest.Unmarshal(m, b)
}
func (m *NewProductRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewProductRequest.Marshal(b, m, deterministic)
}
func (m *NewProductRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewProductRequest.Merge(m, src)
}
func (m *NewProductRequest) XXX_Size() int {
	return xxx_messageInfo_NewProductRequest.Size(m)
}
func (m *NewProductRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewProductRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewProductRequest proto.InternalMessageInfo

func (m *NewProductRequest) GetProduct() *domain.Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *NewProductRequest) GetEosAccount() *domain.EosAccount {
	if m != nil {
		return m.EosAccount
	}
	return nil
}

type DeleteProductRequest struct {
	ProductId            string             `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	EosAccount           *domain.EosAccount `protobuf:"bytes,2,opt,name=eos_account,json=eosAccount,proto3" json:"eos_account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DeleteProductRequest) Reset()         { *m = DeleteProductRequest{} }
func (m *DeleteProductRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProductRequest) ProtoMessage()    {}
func (*DeleteProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6634401e8d86e904, []int{2}
}

func (m *DeleteProductRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProductRequest.Unmarshal(m, b)
}
func (m *DeleteProductRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProductRequest.Marshal(b, m, deterministic)
}
func (m *DeleteProductRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProductRequest.Merge(m, src)
}
func (m *DeleteProductRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteProductRequest.Size(m)
}
func (m *DeleteProductRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProductRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProductRequest proto.InternalMessageInfo

func (m *DeleteProductRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *DeleteProductRequest) GetEosAccount() *domain.EosAccount {
	if m != nil {
		return m.EosAccount
	}
	return nil
}

type UpdateProductRequest struct {
	ProductId            string             `protobuf:"bytes,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Product              *domain.Product    `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	EosAccount           *domain.EosAccount `protobuf:"bytes,2,opt,name=eos_account,json=eosAccount,proto3" json:"eos_account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UpdateProductRequest) Reset()         { *m = UpdateProductRequest{} }
func (m *UpdateProductRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProductRequest) ProtoMessage()    {}
func (*UpdateProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6634401e8d86e904, []int{3}
}

func (m *UpdateProductRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProductRequest.Unmarshal(m, b)
}
func (m *UpdateProductRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProductRequest.Marshal(b, m, deterministic)
}
func (m *UpdateProductRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProductRequest.Merge(m, src)
}
func (m *UpdateProductRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateProductRequest.Size(m)
}
func (m *UpdateProductRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProductRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProductRequest proto.InternalMessageInfo

func (m *UpdateProductRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *UpdateProductRequest) GetProduct() *domain.Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *UpdateProductRequest) GetEosAccount() *domain.EosAccount {
	if m != nil {
		return m.EosAccount
	}
	return nil
}

type NewProductItemRequest struct {
	ProductItem          *domain.ProductItem `protobuf:"bytes,1,opt,name=product_item,json=productItem,proto3" json:"product_item,omitempty"`
	EosAccount           *domain.EosAccount  `protobuf:"bytes,2,opt,name=eos_account,json=eosAccount,proto3" json:"eos_account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *NewProductItemRequest) Reset()         { *m = NewProductItemRequest{} }
func (m *NewProductItemRequest) String() string { return proto.CompactTextString(m) }
func (*NewProductItemRequest) ProtoMessage()    {}
func (*NewProductItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6634401e8d86e904, []int{4}
}

func (m *NewProductItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewProductItemRequest.Unmarshal(m, b)
}
func (m *NewProductItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewProductItemRequest.Marshal(b, m, deterministic)
}
func (m *NewProductItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewProductItemRequest.Merge(m, src)
}
func (m *NewProductItemRequest) XXX_Size() int {
	return xxx_messageInfo_NewProductItemRequest.Size(m)
}
func (m *NewProductItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewProductItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewProductItemRequest proto.InternalMessageInfo

func (m *NewProductItemRequest) GetProductItem() *domain.ProductItem {
	if m != nil {
		return m.ProductItem
	}
	return nil
}

func (m *NewProductItemRequest) GetEosAccount() *domain.EosAccount {
	if m != nil {
		return m.EosAccount
	}
	return nil
}

type DeleteProductItemRequest struct {
	ProductItemId        string             `protobuf:"bytes,1,opt,name=product_item_id,json=productItemId,proto3" json:"product_item_id,omitempty"`
	EosAccount           *domain.EosAccount `protobuf:"bytes,2,opt,name=eos_account,json=eosAccount,proto3" json:"eos_account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DeleteProductItemRequest) Reset()         { *m = DeleteProductItemRequest{} }
func (m *DeleteProductItemRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProductItemRequest) ProtoMessage()    {}
func (*DeleteProductItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6634401e8d86e904, []int{5}
}

func (m *DeleteProductItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProductItemRequest.Unmarshal(m, b)
}
func (m *DeleteProductItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProductItemRequest.Marshal(b, m, deterministic)
}
func (m *DeleteProductItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProductItemRequest.Merge(m, src)
}
func (m *DeleteProductItemRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteProductItemRequest.Size(m)
}
func (m *DeleteProductItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProductItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProductItemRequest proto.InternalMessageInfo

func (m *DeleteProductItemRequest) GetProductItemId() string {
	if m != nil {
		return m.ProductItemId
	}
	return ""
}

func (m *DeleteProductItemRequest) GetEosAccount() *domain.EosAccount {
	if m != nil {
		return m.EosAccount
	}
	return nil
}

type NewProductImageRequest struct {
	ProductImage         *domain.ProductImage `protobuf:"bytes,1,opt,name=product_image,json=productImage,proto3" json:"product_image,omitempty"`
	EosAccount           *domain.EosAccount   `protobuf:"bytes,2,opt,name=eos_account,json=eosAccount,proto3" json:"eos_account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *NewProductImageRequest) Reset()         { *m = NewProductImageRequest{} }
func (m *NewProductImageRequest) String() string { return proto.CompactTextString(m) }
func (*NewProductImageRequest) ProtoMessage()    {}
func (*NewProductImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6634401e8d86e904, []int{6}
}

func (m *NewProductImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewProductImageRequest.Unmarshal(m, b)
}
func (m *NewProductImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewProductImageRequest.Marshal(b, m, deterministic)
}
func (m *NewProductImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewProductImageRequest.Merge(m, src)
}
func (m *NewProductImageRequest) XXX_Size() int {
	return xxx_messageInfo_NewProductImageRequest.Size(m)
}
func (m *NewProductImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewProductImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewProductImageRequest proto.InternalMessageInfo

func (m *NewProductImageRequest) GetProductImage() *domain.ProductImage {
	if m != nil {
		return m.ProductImage
	}
	return nil
}

func (m *NewProductImageRequest) GetEosAccount() *domain.EosAccount {
	if m != nil {
		return m.EosAccount
	}
	return nil
}

type DeleteProductImageRequest struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EosAccount           *domain.EosAccount `protobuf:"bytes,2,opt,name=eos_account,json=eosAccount,proto3" json:"eos_account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DeleteProductImageRequest) Reset()         { *m = DeleteProductImageRequest{} }
func (m *DeleteProductImageRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProductImageRequest) ProtoMessage()    {}
func (*DeleteProductImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6634401e8d86e904, []int{7}
}

func (m *DeleteProductImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProductImageRequest.Unmarshal(m, b)
}
func (m *DeleteProductImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProductImageRequest.Marshal(b, m, deterministic)
}
func (m *DeleteProductImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProductImageRequest.Merge(m, src)
}
func (m *DeleteProductImageRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteProductImageRequest.Size(m)
}
func (m *DeleteProductImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProductImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProductImageRequest proto.InternalMessageInfo

func (m *DeleteProductImageRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteProductImageRequest) GetEosAccount() *domain.EosAccount {
	if m != nil {
		return m.EosAccount
	}
	return nil
}

type DeleteAllProductImagesRequest struct {
	ProductId            string             `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	EosAccount           *domain.EosAccount `protobuf:"bytes,2,opt,name=eos_account,json=eosAccount,proto3" json:"eos_account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DeleteAllProductImagesRequest) Reset()         { *m = DeleteAllProductImagesRequest{} }
func (m *DeleteAllProductImagesRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAllProductImagesRequest) ProtoMessage()    {}
func (*DeleteAllProductImagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6634401e8d86e904, []int{8}
}

func (m *DeleteAllProductImagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAllProductImagesRequest.Unmarshal(m, b)
}
func (m *DeleteAllProductImagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAllProductImagesRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAllProductImagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAllProductImagesRequest.Merge(m, src)
}
func (m *DeleteAllProductImagesRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAllProductImagesRequest.Size(m)
}
func (m *DeleteAllProductImagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAllProductImagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAllProductImagesRequest proto.InternalMessageInfo

func (m *DeleteAllProductImagesRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *DeleteAllProductImagesRequest) GetEosAccount() *domain.EosAccount {
	if m != nil {
		return m.EosAccount
	}
	return nil
}

type NewEventRequest struct {
	Event                *domain.Event      `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	EosAccount           *domain.EosAccount `protobuf:"bytes,2,opt,name=eos_account,json=eosAccount,proto3" json:"eos_account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *NewEventRequest) Reset()         { *m = NewEventRequest{} }
func (m *NewEventRequest) String() string { return proto.CompactTextString(m) }
func (*NewEventRequest) ProtoMessage()    {}
func (*NewEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6634401e8d86e904, []int{9}
}

func (m *NewEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewEventRequest.Unmarshal(m, b)
}
func (m *NewEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewEventRequest.Marshal(b, m, deterministic)
}
func (m *NewEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewEventRequest.Merge(m, src)
}
func (m *NewEventRequest) XXX_Size() int {
	return xxx_messageInfo_NewEventRequest.Size(m)
}
func (m *NewEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewEventRequest proto.InternalMessageInfo

func (m *NewEventRequest) GetEvent() *domain.Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *NewEventRequest) GetEosAccount() *domain.EosAccount {
	if m != nil {
		return m.EosAccount
	}
	return nil
}

type GetPubFromPrivRequest struct {
	PrivateKey           string   `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPubFromPrivRequest) Reset()         { *m = GetPubFromPrivRequest{} }
func (m *GetPubFromPrivRequest) String() string { return proto.CompactTextString(m) }
func (*GetPubFromPrivRequest) ProtoMessage()    {}
func (*GetPubFromPrivRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6634401e8d86e904, []int{10}
}

func (m *GetPubFromPrivRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPubFromPrivRequest.Unmarshal(m, b)
}
func (m *GetPubFromPrivRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPubFromPrivRequest.Marshal(b, m, deterministic)
}
func (m *GetPubFromPrivRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPubFromPrivRequest.Merge(m, src)
}
func (m *GetPubFromPrivRequest) XXX_Size() int {
	return xxx_messageInfo_GetPubFromPrivRequest.Size(m)
}
func (m *GetPubFromPrivRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPubFromPrivRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPubFromPrivRequest proto.InternalMessageInfo

func (m *GetPubFromPrivRequest) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

type GetPubFromPrivResponse struct {
	PublicKey            string   `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPubFromPrivResponse) Reset()         { *m = GetPubFromPrivResponse{} }
func (m *GetPubFromPrivResponse) String() string { return proto.CompactTextString(m) }
func (*GetPubFromPrivResponse) ProtoMessage()    {}
func (*GetPubFromPrivResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6634401e8d86e904, []int{11}
}

func (m *GetPubFromPrivResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPubFromPrivResponse.Unmarshal(m, b)
}
func (m *GetPubFromPrivResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPubFromPrivResponse.Marshal(b, m, deterministic)
}
func (m *GetPubFromPrivResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPubFromPrivResponse.Merge(m, src)
}
func (m *GetPubFromPrivResponse) XXX_Size() int {
	return xxx_messageInfo_GetPubFromPrivResponse.Size(m)
}
func (m *GetPubFromPrivResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPubFromPrivResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPubFromPrivResponse proto.InternalMessageInfo

func (m *GetPubFromPrivResponse) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type GetNameFromPubRequest struct {
	PublicKey            string   `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNameFromPubRequest) Reset()         { *m = GetNameFromPubRequest{} }
func (m *GetNameFromPubRequest) String() string { return proto.CompactTextString(m) }
func (*GetNameFromPubRequest) ProtoMessage()    {}
func (*GetNameFromPubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6634401e8d86e904, []int{12}
}

func (m *GetNameFromPubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNameFromPubRequest.Unmarshal(m, b)
}
func (m *GetNameFromPubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNameFromPubRequest.Marshal(b, m, deterministic)
}
func (m *GetNameFromPubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNameFromPubRequest.Merge(m, src)
}
func (m *GetNameFromPubRequest) XXX_Size() int {
	return xxx_messageInfo_GetNameFromPubRequest.Size(m)
}
func (m *GetNameFromPubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNameFromPubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNameFromPubRequest proto.InternalMessageInfo

func (m *GetNameFromPubRequest) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type GetNameFromPubResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNameFromPubResponse) Reset()         { *m = GetNameFromPubResponse{} }
func (m *GetNameFromPubResponse) String() string { return proto.CompactTextString(m) }
func (*GetNameFromPubResponse) ProtoMessage()    {}
func (*GetNameFromPubResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6634401e8d86e904, []int{13}
}

func (m *GetNameFromPubResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNameFromPubResponse.Unmarshal(m, b)
}
func (m *GetNameFromPubResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNameFromPubResponse.Marshal(b, m, deterministic)
}
func (m *GetNameFromPubResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNameFromPubResponse.Merge(m, src)
}
func (m *GetNameFromPubResponse) XXX_Size() int {
	return xxx_messageInfo_GetNameFromPubResponse.Size(m)
}
func (m *GetNameFromPubResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNameFromPubResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNameFromPubResponse proto.InternalMessageInfo

func (m *GetNameFromPubResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetPubFromNameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPubFromNameRequest) Reset()         { *m = GetPubFromNameRequest{} }
func (m *GetPubFromNameRequest) String() string { return proto.CompactTextString(m) }
func (*GetPubFromNameRequest) ProtoMessage()    {}
func (*GetPubFromNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6634401e8d86e904, []int{14}
}

func (m *GetPubFromNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPubFromNameRequest.Unmarshal(m, b)
}
func (m *GetPubFromNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPubFromNameRequest.Marshal(b, m, deterministic)
}
func (m *GetPubFromNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPubFromNameRequest.Merge(m, src)
}
func (m *GetPubFromNameRequest) XXX_Size() int {
	return xxx_messageInfo_GetPubFromNameRequest.Size(m)
}
func (m *GetPubFromNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPubFromNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPubFromNameRequest proto.InternalMessageInfo

func (m *GetPubFromNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetPubFromNameResponse struct {
	PublicKey            string   `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPubFromNameResponse) Reset()         { *m = GetPubFromNameResponse{} }
func (m *GetPubFromNameResponse) String() string { return proto.CompactTextString(m) }
func (*GetPubFromNameResponse) ProtoMessage()    {}
func (*GetPubFromNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6634401e8d86e904, []int{15}
}

func (m *GetPubFromNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPubFromNameResponse.Unmarshal(m, b)
}
func (m *GetPubFromNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPubFromNameResponse.Marshal(b, m, deterministic)
}
func (m *GetPubFromNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPubFromNameResponse.Merge(m, src)
}
func (m *GetPubFromNameResponse) XXX_Size() int {
	return xxx_messageInfo_GetPubFromNameResponse.Size(m)
}
func (m *GetPubFromNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPubFromNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPubFromNameResponse proto.InternalMessageInfo

func (m *GetPubFromNameResponse) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func init() {
	proto.RegisterType((*GetByIDRequest)(nil), "service.eos.GetByIDRequest")
	proto.RegisterType((*NewProductRequest)(nil), "service.eos.NewProductRequest")
	proto.RegisterType((*DeleteProductRequest)(nil), "service.eos.DeleteProductRequest")
	proto.RegisterType((*UpdateProductRequest)(nil), "service.eos.UpdateProductRequest")
	proto.RegisterType((*NewProductItemRequest)(nil), "service.eos.NewProductItemRequest")
	proto.RegisterType((*DeleteProductItemRequest)(nil), "service.eos.DeleteProductItemRequest")
	proto.RegisterType((*NewProductImageRequest)(nil), "service.eos.NewProductImageRequest")
	proto.RegisterType((*DeleteProductImageRequest)(nil), "service.eos.DeleteProductImageRequest")
	proto.RegisterType((*DeleteAllProductImagesRequest)(nil), "service.eos.DeleteAllProductImagesRequest")
	proto.RegisterType((*NewEventRequest)(nil), "service.eos.NewEventRequest")
	proto.RegisterType((*GetPubFromPrivRequest)(nil), "service.eos.GetPubFromPrivRequest")
	proto.RegisterType((*GetPubFromPrivResponse)(nil), "service.eos.GetPubFromPrivResponse")
	proto.RegisterType((*GetNameFromPubRequest)(nil), "service.eos.GetNameFromPubRequest")
	proto.RegisterType((*GetNameFromPubResponse)(nil), "service.eos.GetNameFromPubResponse")
	proto.RegisterType((*GetPubFromNameRequest)(nil), "service.eos.GetPubFromNameRequest")
	proto.RegisterType((*GetPubFromNameResponse)(nil), "service.eos.GetPubFromNameResponse")
}

func init() { proto.RegisterFile("service/eos/eos.proto", fileDescriptor_6634401e8d86e904) }

var fileDescriptor_6634401e8d86e904 = []byte{
	// 733 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdf, 0x4f, 0x13, 0x41,
	0x10, 0x4e, 0x41, 0x54, 0xe6, 0x2c, 0x95, 0xe1, 0x47, 0xb0, 0x8a, 0x62, 0x89, 0xc4, 0x5f, 0x29,
	0x0a, 0x09, 0xfe, 0x78, 0x20, 0x42, 0x68, 0x91, 0x68, 0x0a, 0x81, 0x68, 0xa2, 0x2f, 0x78, 0x6d,
	0x27, 0xe6, 0xa4, 0xd7, 0xab, 0xdd, 0x6d, 0x9b, 0xbe, 0xfb, 0xe0, 0xab, 0x0f, 0xfe, 0xbf, 0xe6,
	0xf6, 0x76, 0xaf, 0xbb, 0x77, 0xdb, 0x62, 0x2e, 0xe1, 0x81, 0x70, 0xb7, 0x37, 0xf3, 0x7d, 0xdf,
	0xcc, 0xee, 0x7e, 0x53, 0x58, 0x62, 0xd4, 0xed, 0x7b, 0x0d, 0xda, 0xa4, 0x80, 0x85, 0x7f, 0xe5,
	0x4e, 0x37, 0xe0, 0x01, 0x3a, 0x72, 0xb9, 0x4c, 0x01, 0x2b, 0x2e, 0x34, 0x03, 0xdf, 0xf5, 0xda,
	0x9b, 0xd1, 0xbf, 0x28, 0xa2, 0xb4, 0x06, 0x73, 0x87, 0xc4, 0xf7, 0x87, 0x47, 0x07, 0xa7, 0xf4,
	0xb3, 0x47, 0x8c, 0xe3, 0x1c, 0x4c, 0x79, 0xcd, 0x95, 0xdc, 0x5a, 0xee, 0xf1, 0xec, 0xe9, 0x94,
	0xd7, 0x2c, 0x31, 0x98, 0xaf, 0xd1, 0xe0, 0xa4, 0x1b, 0x34, 0x7b, 0x0d, 0xae, 0x82, 0x9e, 0xc0,
	0x8d, 0x4e, 0xb4, 0x22, 0x22, 0x9d, 0xad, 0x42, 0x59, 0xc2, 0xaa, 0x40, 0xf5, 0x1d, 0xb7, 0xc1,
	0xa1, 0x80, 0x9d, 0xbb, 0x8d, 0x46, 0xd0, 0x6b, 0xf3, 0x95, 0x29, 0x11, 0x8e, 0x2a, 0xbc, 0x12,
	0xb0, 0xbd, 0xe8, 0xcb, 0x29, 0x50, 0xfc, 0x5c, 0xfa, 0x01, 0x8b, 0x07, 0xd4, 0x22, 0x4e, 0x09,
	0xde, 0x55, 0x00, 0x89, 0x7b, 0x1e, 0x8b, 0x9c, 0x95, 0x2b, 0x47, 0xcd, 0x6c, 0x5c, 0x7f, 0x73,
	0xb0, 0xf8, 0xa9, 0xd3, 0x74, 0x2f, 0x21, 0x9b, 0x4e, 0x92, 0x5d, 0x75, 0x0f, 0x7e, 0xe5, 0x60,
	0x69, 0xd4, 0xf9, 0x23, 0x4e, 0xbe, 0x12, 0xb6, 0x03, 0xb7, 0x62, 0x61, 0x9c, 0x7c, 0x49, 0xbf,
	0x90, 0xa0, 0x17, 0x19, 0x4e, 0x67, 0xf4, 0x92, 0x4d, 0xc6, 0x00, 0x56, 0x8c, 0xad, 0xd0, 0x85,
	0x6c, 0x40, 0x41, 0x17, 0x32, 0xda, 0x93, 0xbc, 0x46, 0x9b, 0x75, 0x5f, 0x7e, 0xe7, 0x60, 0x59,
	0xab, 0xdf, 0x77, 0xbf, 0x93, 0xe2, 0x7d, 0x03, 0xf9, 0x98, 0x37, 0x5c, 0x97, 0x1d, 0x58, 0x4c,
	0x76, 0x40, 0xe4, 0xa8, 0x5e, 0x89, 0xb7, 0x6c, 0x52, 0xbe, 0xc1, 0x1d, 0xb3, 0x07, 0xba, 0x98,
	0xc4, 0x85, 0xc9, 0xc6, 0xc0, 0x60, 0x35, 0x62, 0xd8, 0x6b, 0xb5, 0x74, 0x12, 0x76, 0x95, 0x27,
	0xff, 0x02, 0x0a, 0x35, 0x1a, 0x54, 0xfa, 0xd4, 0x8e, 0xcf, 0xfc, 0x3a, 0xcc, 0x50, 0xf8, 0x2e,
	0x3b, 0x9a, 0x8f, 0x11, 0x44, 0x50, 0xf4, 0x2d, 0x1b, 0xd9, 0x6b, 0x58, 0x3a, 0x24, 0x7e, 0xd2,
	0xab, 0x57, 0xbb, 0x81, 0x7f, 0xd2, 0xf5, 0xfa, 0x8a, 0xf2, 0x01, 0x38, 0x9d, 0xae, 0xd7, 0x77,
	0x39, 0x9d, 0x5f, 0xd0, 0x50, 0x96, 0x06, 0x72, 0xe9, 0x03, 0x0d, 0x4b, 0xaf, 0x60, 0x39, 0x99,
	0xc9, 0x3a, 0x41, 0x9b, 0x91, 0x68, 0x4a, 0xaf, 0xde, 0xf2, 0x1a, 0x5a, 0xe6, 0x6c, 0xb4, 0x12,
	0x26, 0xee, 0x08, 0xca, 0x9a, 0xeb, 0x93, 0xc8, 0xec, 0xd5, 0xf5, 0x66, 0x4e, 0xc8, 0x7b, 0x2e,
	0x08, 0x8d, 0x3c, 0x49, 0x88, 0x70, 0xad, 0xed, 0xfa, 0x24, 0x53, 0xc4, 0x73, 0xe9, 0x99, 0x5e,
	0x58, 0x98, 0xa4, 0x58, 0x6c, 0xc1, 0x46, 0x2d, 0x51, 0xf0, 0x7f, 0xd5, 0xb2, 0xf5, 0x07, 0x60,
	0xba, 0x72, 0x7c, 0x86, 0x2f, 0x20, 0x1f, 0xee, 0xd9, 0xf1, 0x99, 0xec, 0x2b, 0x3a, 0xaa, 0xef,
	0x35, 0xaf, 0x55, 0xb4, 0x6c, 0x02, 0xbe, 0x04, 0xa7, 0x46, 0x83, 0xaa, 0xdb, 0xf0, 0x5a, 0x1e,
	0x1f, 0xe2, 0x6d, 0x15, 0xa2, 0x56, 0x8a, 0xf1, 0x4a, 0xac, 0xe5, 0x2d, 0xe0, 0x21, 0x71, 0x15,
	0x50, 0x39, 0x3e, 0x0b, 0x95, 0xa2, 0x05, 0xbc, 0x98, 0x42, 0xc3, 0x77, 0x50, 0xd0, 0x72, 0xc3,
	0xc9, 0x82, 0x77, 0xcb, 0xda, 0x1c, 0x2a, 0x9b, 0xf3, 0xc6, 0x82, 0xb0, 0x0b, 0x30, 0xba, 0xf7,
	0x78, 0xdf, 0x48, 0x4e, 0x8d, 0x22, 0x8b, 0xfa, 0x03, 0xc8, 0x1b, 0xb7, 0x15, 0x1f, 0x1a, 0x10,
	0xb6, 0xc1, 0x62, 0x47, 0x31, 0xa6, 0x42, 0x02, 0xc5, 0x36, 0x31, 0x2c, 0x28, 0xbb, 0x62, 0xbe,
	0xca, 0xb0, 0xcb, 0x9b, 0x91, 0x1c, 0x21, 0x58, 0x85, 0x39, 0x73, 0x06, 0x60, 0x69, 0x4c, 0x3f,
	0x34, 0x5f, 0xb6, 0xe8, 0xf8, 0x08, 0xf3, 0x29, 0x17, 0xc7, 0x47, 0xe3, 0xfb, 0x32, 0x19, 0xad,
	0x2a, 0xce, 0x87, 0x16, 0x7a, 0x79, 0x65, 0xb6, 0xe9, 0x84, 0xef, 0x85, 0x01, 0xe9, 0x7e, 0x87,
	0xeb, 0xe3, 0xca, 0xd3, 0x2c, 0xd7, 0xa2, 0xa8, 0x06, 0x98, 0x76, 0x68, 0xdc, 0x98, 0x50, 0xe0,
	0x64, 0xbc, 0xcf, 0xb0, 0x6c, 0xf7, 0x63, 0x7c, 0x6a, 0xc1, 0x1c, 0x63, 0xda, 0xd6, 0x9b, 0x75,
	0x53, 0x59, 0x2e, 0xde, 0x4b, 0x96, 0xaa, 0x3b, 0xb1, 0x25, 0xf7, 0x4b, 0x74, 0x96, 0x46, 0x3e,
	0x98, 0x38, 0x0b, 0x56, 0x7b, 0x2d, 0xae, 0x4f, 0x8c, 0x31, 0xa0, 0x35, 0xc7, 0x4b, 0x43, 0xa7,
	0x6d, 0x34, 0x0d, 0x6d, 0xb3, 0x4c, 0x43, 0xb5, 0xf0, 0x91, 0x71, 0xaa, 0x35, 0xef, 0x1c, 0xab,
	0x5a, 0xb7, 0xcc, 0xfd, 0x99, 0xaf, 0xd3, 0x14, 0xb0, 0xfa, 0x75, 0xf1, 0x53, 0x76, 0xfb, 0x5f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x6d, 0x48, 0x26, 0x05, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EOSClient is the client API for EOS service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EOSClient interface {
	NewEOSAccount(ctx context.Context, in *domain.Nil, opts ...grpc.CallOption) (*domain.EosAccount, error)
	NewFacility(ctx context.Context, in *domain.Facility, opts ...grpc.CallOption) (*domain.Response, error)
	GetFacilityEOSName(ctx context.Context, in *domain.EosAccount, opts ...grpc.CallOption) (*domain.Facility, error)
	GetFacilityByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*domain.Facility, error)
	NewProduct(ctx context.Context, in *NewProductRequest, opts ...grpc.CallOption) (*domain.Response, error)
	DeleteProduct(ctx context.Context, in *DeleteProductRequest, opts ...grpc.CallOption) (*domain.Response, error)
	UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...grpc.CallOption) (*domain.Response, error)
	GetProductByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*domain.Product, error)
	NewProductItem(ctx context.Context, in *NewProductItemRequest, opts ...grpc.CallOption) (*domain.Response, error)
	DeleteProductItem(ctx context.Context, in *DeleteProductItemRequest, opts ...grpc.CallOption) (*domain.Response, error)
	GetProductItemByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*domain.ProductItem, error)
	NewProductImage(ctx context.Context, in *NewProductImageRequest, opts ...grpc.CallOption) (*domain.Response, error)
	DeleteProductImage(ctx context.Context, in *DeleteProductImageRequest, opts ...grpc.CallOption) (*domain.Response, error)
	DeleteAllProductImages(ctx context.Context, in *DeleteAllProductImagesRequest, opts ...grpc.CallOption) (*domain.Response, error)
	NewEvent(ctx context.Context, in *NewEventRequest, opts ...grpc.CallOption) (*domain.Response, error)
	GetPubFromPriv(ctx context.Context, in *GetPubFromPrivRequest, opts ...grpc.CallOption) (*GetPubFromPrivResponse, error)
	GetNameFromPub(ctx context.Context, in *GetNameFromPubRequest, opts ...grpc.CallOption) (*GetNameFromPubResponse, error)
	GetPubFromName(ctx context.Context, in *GetPubFromNameRequest, opts ...grpc.CallOption) (*GetPubFromNameResponse, error)
}

type eOSClient struct {
	cc *grpc.ClientConn
}

func NewEOSClient(cc *grpc.ClientConn) EOSClient {
	return &eOSClient{cc}
}

func (c *eOSClient) NewEOSAccount(ctx context.Context, in *domain.Nil, opts ...grpc.CallOption) (*domain.EosAccount, error) {
	out := new(domain.EosAccount)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/NewEOSAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) NewFacility(ctx context.Context, in *domain.Facility, opts ...grpc.CallOption) (*domain.Response, error) {
	out := new(domain.Response)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/NewFacility", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) GetFacilityEOSName(ctx context.Context, in *domain.EosAccount, opts ...grpc.CallOption) (*domain.Facility, error) {
	out := new(domain.Facility)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/GetFacilityEOSName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) GetFacilityByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*domain.Facility, error) {
	out := new(domain.Facility)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/GetFacilityByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) NewProduct(ctx context.Context, in *NewProductRequest, opts ...grpc.CallOption) (*domain.Response, error) {
	out := new(domain.Response)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/NewProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) DeleteProduct(ctx context.Context, in *DeleteProductRequest, opts ...grpc.CallOption) (*domain.Response, error) {
	out := new(domain.Response)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/DeleteProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...grpc.CallOption) (*domain.Response, error) {
	out := new(domain.Response)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/UpdateProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) GetProductByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*domain.Product, error) {
	out := new(domain.Product)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/GetProductByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) NewProductItem(ctx context.Context, in *NewProductItemRequest, opts ...grpc.CallOption) (*domain.Response, error) {
	out := new(domain.Response)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/NewProductItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) DeleteProductItem(ctx context.Context, in *DeleteProductItemRequest, opts ...grpc.CallOption) (*domain.Response, error) {
	out := new(domain.Response)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/DeleteProductItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) GetProductItemByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*domain.ProductItem, error) {
	out := new(domain.ProductItem)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/GetProductItemByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) NewProductImage(ctx context.Context, in *NewProductImageRequest, opts ...grpc.CallOption) (*domain.Response, error) {
	out := new(domain.Response)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/NewProductImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) DeleteProductImage(ctx context.Context, in *DeleteProductImageRequest, opts ...grpc.CallOption) (*domain.Response, error) {
	out := new(domain.Response)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/DeleteProductImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) DeleteAllProductImages(ctx context.Context, in *DeleteAllProductImagesRequest, opts ...grpc.CallOption) (*domain.Response, error) {
	out := new(domain.Response)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/DeleteAllProductImages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) NewEvent(ctx context.Context, in *NewEventRequest, opts ...grpc.CallOption) (*domain.Response, error) {
	out := new(domain.Response)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/NewEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) GetPubFromPriv(ctx context.Context, in *GetPubFromPrivRequest, opts ...grpc.CallOption) (*GetPubFromPrivResponse, error) {
	out := new(GetPubFromPrivResponse)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/GetPubFromPriv", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) GetNameFromPub(ctx context.Context, in *GetNameFromPubRequest, opts ...grpc.CallOption) (*GetNameFromPubResponse, error) {
	out := new(GetNameFromPubResponse)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/GetNameFromPub", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eOSClient) GetPubFromName(ctx context.Context, in *GetPubFromNameRequest, opts ...grpc.CallOption) (*GetPubFromNameResponse, error) {
	out := new(GetPubFromNameResponse)
	err := c.cc.Invoke(ctx, "/service.eos.EOS/GetPubFromName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EOSServer is the server API for EOS service.
type EOSServer interface {
	NewEOSAccount(context.Context, *domain.Nil) (*domain.EosAccount, error)
	NewFacility(context.Context, *domain.Facility) (*domain.Response, error)
	GetFacilityEOSName(context.Context, *domain.EosAccount) (*domain.Facility, error)
	GetFacilityByID(context.Context, *GetByIDRequest) (*domain.Facility, error)
	NewProduct(context.Context, *NewProductRequest) (*domain.Response, error)
	DeleteProduct(context.Context, *DeleteProductRequest) (*domain.Response, error)
	UpdateProduct(context.Context, *UpdateProductRequest) (*domain.Response, error)
	GetProductByID(context.Context, *GetByIDRequest) (*domain.Product, error)
	NewProductItem(context.Context, *NewProductItemRequest) (*domain.Response, error)
	DeleteProductItem(context.Context, *DeleteProductItemRequest) (*domain.Response, error)
	GetProductItemByID(context.Context, *GetByIDRequest) (*domain.ProductItem, error)
	NewProductImage(context.Context, *NewProductImageRequest) (*domain.Response, error)
	DeleteProductImage(context.Context, *DeleteProductImageRequest) (*domain.Response, error)
	DeleteAllProductImages(context.Context, *DeleteAllProductImagesRequest) (*domain.Response, error)
	NewEvent(context.Context, *NewEventRequest) (*domain.Response, error)
	GetPubFromPriv(context.Context, *GetPubFromPrivRequest) (*GetPubFromPrivResponse, error)
	GetNameFromPub(context.Context, *GetNameFromPubRequest) (*GetNameFromPubResponse, error)
	GetPubFromName(context.Context, *GetPubFromNameRequest) (*GetPubFromNameResponse, error)
}

// UnimplementedEOSServer can be embedded to have forward compatible implementations.
type UnimplementedEOSServer struct {
}

func (*UnimplementedEOSServer) NewEOSAccount(ctx context.Context, req *domain.Nil) (*domain.EosAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewEOSAccount not implemented")
}
func (*UnimplementedEOSServer) NewFacility(ctx context.Context, req *domain.Facility) (*domain.Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewFacility not implemented")
}
func (*UnimplementedEOSServer) GetFacilityEOSName(ctx context.Context, req *domain.EosAccount) (*domain.Facility, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFacilityEOSName not implemented")
}
func (*UnimplementedEOSServer) GetFacilityByID(ctx context.Context, req *GetByIDRequest) (*domain.Facility, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFacilityByID not implemented")
}
func (*UnimplementedEOSServer) NewProduct(ctx context.Context, req *NewProductRequest) (*domain.Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewProduct not implemented")
}
func (*UnimplementedEOSServer) DeleteProduct(ctx context.Context, req *DeleteProductRequest) (*domain.Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProduct not implemented")
}
func (*UnimplementedEOSServer) UpdateProduct(ctx context.Context, req *UpdateProductRequest) (*domain.Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProduct not implemented")
}
func (*UnimplementedEOSServer) GetProductByID(ctx context.Context, req *GetByIDRequest) (*domain.Product, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductByID not implemented")
}
func (*UnimplementedEOSServer) NewProductItem(ctx context.Context, req *NewProductItemRequest) (*domain.Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewProductItem not implemented")
}
func (*UnimplementedEOSServer) DeleteProductItem(ctx context.Context, req *DeleteProductItemRequest) (*domain.Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProductItem not implemented")
}
func (*UnimplementedEOSServer) GetProductItemByID(ctx context.Context, req *GetByIDRequest) (*domain.ProductItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductItemByID not implemented")
}
func (*UnimplementedEOSServer) NewProductImage(ctx context.Context, req *NewProductImageRequest) (*domain.Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewProductImage not implemented")
}
func (*UnimplementedEOSServer) DeleteProductImage(ctx context.Context, req *DeleteProductImageRequest) (*domain.Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProductImage not implemented")
}
func (*UnimplementedEOSServer) DeleteAllProductImages(ctx context.Context, req *DeleteAllProductImagesRequest) (*domain.Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAllProductImages not implemented")
}
func (*UnimplementedEOSServer) NewEvent(ctx context.Context, req *NewEventRequest) (*domain.Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewEvent not implemented")
}
func (*UnimplementedEOSServer) GetPubFromPriv(ctx context.Context, req *GetPubFromPrivRequest) (*GetPubFromPrivResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPubFromPriv not implemented")
}
func (*UnimplementedEOSServer) GetNameFromPub(ctx context.Context, req *GetNameFromPubRequest) (*GetNameFromPubResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNameFromPub not implemented")
}
func (*UnimplementedEOSServer) GetPubFromName(ctx context.Context, req *GetPubFromNameRequest) (*GetPubFromNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPubFromName not implemented")
}

func RegisterEOSServer(s *grpc.Server, srv EOSServer) {
	s.RegisterService(&_EOS_serviceDesc, srv)
}

func _EOS_NewEOSAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.Nil)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).NewEOSAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/NewEOSAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).NewEOSAccount(ctx, req.(*domain.Nil))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_NewFacility_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.Facility)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).NewFacility(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/NewFacility",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).NewFacility(ctx, req.(*domain.Facility))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_GetFacilityEOSName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.EosAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).GetFacilityEOSName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/GetFacilityEOSName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).GetFacilityEOSName(ctx, req.(*domain.EosAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_GetFacilityByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).GetFacilityByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/GetFacilityByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).GetFacilityByID(ctx, req.(*GetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_NewProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).NewProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/NewProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).NewProduct(ctx, req.(*NewProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_DeleteProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).DeleteProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/DeleteProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).DeleteProduct(ctx, req.(*DeleteProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_UpdateProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).UpdateProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/UpdateProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).UpdateProduct(ctx, req.(*UpdateProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_GetProductByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).GetProductByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/GetProductByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).GetProductByID(ctx, req.(*GetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_NewProductItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewProductItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).NewProductItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/NewProductItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).NewProductItem(ctx, req.(*NewProductItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_DeleteProductItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProductItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).DeleteProductItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/DeleteProductItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).DeleteProductItem(ctx, req.(*DeleteProductItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_GetProductItemByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).GetProductItemByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/GetProductItemByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).GetProductItemByID(ctx, req.(*GetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_NewProductImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewProductImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).NewProductImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/NewProductImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).NewProductImage(ctx, req.(*NewProductImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_DeleteProductImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProductImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).DeleteProductImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/DeleteProductImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).DeleteProductImage(ctx, req.(*DeleteProductImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_DeleteAllProductImages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAllProductImagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).DeleteAllProductImages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/DeleteAllProductImages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).DeleteAllProductImages(ctx, req.(*DeleteAllProductImagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_NewEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).NewEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/NewEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).NewEvent(ctx, req.(*NewEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_GetPubFromPriv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPubFromPrivRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).GetPubFromPriv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/GetPubFromPriv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).GetPubFromPriv(ctx, req.(*GetPubFromPrivRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_GetNameFromPub_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNameFromPubRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).GetNameFromPub(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/GetNameFromPub",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).GetNameFromPub(ctx, req.(*GetNameFromPubRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EOS_GetPubFromName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPubFromNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EOSServer).GetPubFromName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.eos.EOS/GetPubFromName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EOSServer).GetPubFromName(ctx, req.(*GetPubFromNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EOS_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.eos.EOS",
	HandlerType: (*EOSServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewEOSAccount",
			Handler:    _EOS_NewEOSAccount_Handler,
		},
		{
			MethodName: "NewFacility",
			Handler:    _EOS_NewFacility_Handler,
		},
		{
			MethodName: "GetFacilityEOSName",
			Handler:    _EOS_GetFacilityEOSName_Handler,
		},
		{
			MethodName: "GetFacilityByID",
			Handler:    _EOS_GetFacilityByID_Handler,
		},
		{
			MethodName: "NewProduct",
			Handler:    _EOS_NewProduct_Handler,
		},
		{
			MethodName: "DeleteProduct",
			Handler:    _EOS_DeleteProduct_Handler,
		},
		{
			MethodName: "UpdateProduct",
			Handler:    _EOS_UpdateProduct_Handler,
		},
		{
			MethodName: "GetProductByID",
			Handler:    _EOS_GetProductByID_Handler,
		},
		{
			MethodName: "NewProductItem",
			Handler:    _EOS_NewProductItem_Handler,
		},
		{
			MethodName: "DeleteProductItem",
			Handler:    _EOS_DeleteProductItem_Handler,
		},
		{
			MethodName: "GetProductItemByID",
			Handler:    _EOS_GetProductItemByID_Handler,
		},
		{
			MethodName: "NewProductImage",
			Handler:    _EOS_NewProductImage_Handler,
		},
		{
			MethodName: "DeleteProductImage",
			Handler:    _EOS_DeleteProductImage_Handler,
		},
		{
			MethodName: "DeleteAllProductImages",
			Handler:    _EOS_DeleteAllProductImages_Handler,
		},
		{
			MethodName: "NewEvent",
			Handler:    _EOS_NewEvent_Handler,
		},
		{
			MethodName: "GetPubFromPriv",
			Handler:    _EOS_GetPubFromPriv_Handler,
		},
		{
			MethodName: "GetNameFromPub",
			Handler:    _EOS_GetNameFromPub_Handler,
		},
		{
			MethodName: "GetPubFromName",
			Handler:    _EOS_GetPubFromName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service/eos/eos.proto",
}
