// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/main/product/product.proto

package product

import (
	context "context"
	fmt "fmt"
	math "math"

	"main_service/config/grpc/proto/domain"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateRequest struct {
	Product              *domain.Product `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Images               []string        `protobuf:"bytes,2,rep,name=images,proto3" json:"images,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ae8cd59070daf9b, []int{0}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetProduct() *domain.Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *CreateRequest) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

type GetByIDRequest struct {
	ProductId            string   `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductItemId        string   `protobuf:"bytes,2,opt,name=product_item_id,json=productItemId,proto3" json:"product_item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIDRequest) Reset()         { *m = GetByIDRequest{} }
func (m *GetByIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetByIDRequest) ProtoMessage()    {}
func (*GetByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ae8cd59070daf9b, []int{1}
}

func (m *GetByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIDRequest.Unmarshal(m, b)
}
func (m *GetByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIDRequest.Marshal(b, m, deterministic)
}
func (m *GetByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIDRequest.Merge(m, src)
}
func (m *GetByIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetByIDRequest.Size(m)
}
func (m *GetByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIDRequest proto.InternalMessageInfo

func (m *GetByIDRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *GetByIDRequest) GetProductItemId() string {
	if m != nil {
		return m.ProductItemId
	}
	return ""
}

type GetByIDResponse struct {
	Product              *domain.Product        `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Rating               float32                `protobuf:"fixed32,2,opt,name=rating,proto3" json:"rating,omitempty"`
	Images               []string               `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"`
	RawImages            []*domain.ProductImage `protobuf:"bytes,4,rep,name=raw_images,json=rawImages,proto3" json:"raw_images,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetByIDResponse) Reset()         { *m = GetByIDResponse{} }
func (m *GetByIDResponse) String() string { return proto.CompactTextString(m) }
func (*GetByIDResponse) ProtoMessage()    {}
func (*GetByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ae8cd59070daf9b, []int{2}
}

func (m *GetByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIDResponse.Unmarshal(m, b)
}
func (m *GetByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIDResponse.Marshal(b, m, deterministic)
}
func (m *GetByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIDResponse.Merge(m, src)
}
func (m *GetByIDResponse) XXX_Size() int {
	return xxx_messageInfo_GetByIDResponse.Size(m)
}
func (m *GetByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIDResponse proto.InternalMessageInfo

func (m *GetByIDResponse) GetProduct() *domain.Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *GetByIDResponse) GetRating() float32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *GetByIDResponse) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *GetByIDResponse) GetRawImages() []*domain.ProductImage {
	if m != nil {
		return m.RawImages
	}
	return nil
}

type DeleteRequest struct {
	ProductId            string   `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ae8cd59070daf9b, []int{3}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

type GetByFacilityIDRequest struct {
	FacilityId           string             `protobuf:"bytes,1,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
	Order                *domain.QueryOrder `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	Pagination           *domain.Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetByFacilityIDRequest) Reset()         { *m = GetByFacilityIDRequest{} }
func (m *GetByFacilityIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetByFacilityIDRequest) ProtoMessage()    {}
func (*GetByFacilityIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ae8cd59070daf9b, []int{4}
}

func (m *GetByFacilityIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByFacilityIDRequest.Unmarshal(m, b)
}
func (m *GetByFacilityIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByFacilityIDRequest.Marshal(b, m, deterministic)
}
func (m *GetByFacilityIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByFacilityIDRequest.Merge(m, src)
}
func (m *GetByFacilityIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetByFacilityIDRequest.Size(m)
}
func (m *GetByFacilityIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByFacilityIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByFacilityIDRequest proto.InternalMessageInfo

func (m *GetByFacilityIDRequest) GetFacilityId() string {
	if m != nil {
		return m.FacilityId
	}
	return ""
}

func (m *GetByFacilityIDRequest) GetOrder() *domain.QueryOrder {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *GetByFacilityIDRequest) GetPagination() *domain.Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type GetByFacilityIDResponse struct {
	Products             []*domain.Product `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	Count                int32             `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetByFacilityIDResponse) Reset()         { *m = GetByFacilityIDResponse{} }
func (m *GetByFacilityIDResponse) String() string { return proto.CompactTextString(m) }
func (*GetByFacilityIDResponse) ProtoMessage()    {}
func (*GetByFacilityIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ae8cd59070daf9b, []int{5}
}

func (m *GetByFacilityIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByFacilityIDResponse.Unmarshal(m, b)
}
func (m *GetByFacilityIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByFacilityIDResponse.Marshal(b, m, deterministic)
}
func (m *GetByFacilityIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByFacilityIDResponse.Merge(m, src)
}
func (m *GetByFacilityIDResponse) XXX_Size() int {
	return xxx_messageInfo_GetByFacilityIDResponse.Size(m)
}
func (m *GetByFacilityIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByFacilityIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetByFacilityIDResponse proto.InternalMessageInfo

func (m *GetByFacilityIDResponse) GetProducts() []*domain.Product {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *GetByFacilityIDResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "service.main.product.CreateRequest")
	proto.RegisterType((*GetByIDRequest)(nil), "service.main.product.GetByIDRequest")
	proto.RegisterType((*GetByIDResponse)(nil), "service.main.product.GetByIDResponse")
	proto.RegisterType((*DeleteRequest)(nil), "service.main.product.DeleteRequest")
	proto.RegisterType((*GetByFacilityIDRequest)(nil), "service.main.product.GetByFacilityIDRequest")
	proto.RegisterType((*GetByFacilityIDResponse)(nil), "service.main.product.GetByFacilityIDResponse")
}

func init() { proto.RegisterFile("service/main/product/product.proto", fileDescriptor_7ae8cd59070daf9b) }

var fileDescriptor_7ae8cd59070daf9b = []byte{
	// 460 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0x25, 0xad, 0x4d, 0xcd, 0x2d, 0xb5, 0x32, 0x96, 0xb5, 0x04, 0xc4, 0x12, 0x3f, 0xa8, 0x5f,
	0x59, 0xc8, 0xbe, 0x2b, 0xac, 0x8b, 0x92, 0x27, 0xd7, 0x01, 0x15, 0x44, 0x58, 0xc6, 0xce, 0x58,
	0x06, 0xb6, 0x99, 0x38, 0x99, 0xba, 0xec, 0x2f, 0xf1, 0xd9, 0x3f, 0x2a, 0x92, 0x99, 0x3b, 0xe9,
	0x47, 0xd6, 0xea, 0x3e, 0x85, 0xb9, 0xf7, 0xdc, 0x33, 0xf7, 0x9c, 0x39, 0x2d, 0x24, 0x95, 0xd0,
	0x3f, 0xe4, 0x5c, 0x1c, 0x2e, 0x99, 0x2c, 0x0e, 0x4b, 0xad, 0xf8, 0x6a, 0x6e, 0xfc, 0x37, 0x2d,
	0xb5, 0x32, 0x8a, 0x8c, 0x11, 0x93, 0xd6, 0x98, 0x14, 0x7b, 0xf1, 0x1d, 0xae, 0xec, 0x8c, 0xfb,
	0x38, 0x68, 0x42, 0x61, 0xf8, 0x5a, 0x0b, 0x66, 0x04, 0x15, 0xdf, 0x57, 0xa2, 0x32, 0xe4, 0x09,
	0xf4, 0x71, 0x60, 0x12, 0x4c, 0x83, 0xd9, 0x20, 0x1b, 0xa5, 0x38, 0x70, 0xea, 0xca, 0xd4, 0xf7,
	0xc9, 0x01, 0x84, 0x72, 0xc9, 0x16, 0xa2, 0x9a, 0x74, 0xa6, 0xdd, 0x59, 0x44, 0xf1, 0x94, 0x7c,
	0x82, 0x5b, 0x6f, 0x85, 0x39, 0xbe, 0xcc, 0x4f, 0x3c, 0xe9, 0x3d, 0x00, 0x1c, 0x3a, 0x93, 0xdc,
	0xf2, 0x46, 0x34, 0xc2, 0x4a, 0xce, 0xc9, 0x63, 0x18, 0x35, 0x6d, 0x23, 0x96, 0x35, 0xa6, 0x63,
	0x31, 0x43, 0x8f, 0x31, 0x62, 0x99, 0xf3, 0xe4, 0x57, 0x00, 0xa3, 0x86, 0xb9, 0x2a, 0x55, 0x51,
	0x89, 0x6b, 0xee, 0xab, 0x99, 0x91, 0xc5, 0xc2, 0xb2, 0x77, 0x28, 0x9e, 0x36, 0x74, 0x74, 0x37,
	0x75, 0x90, 0x23, 0x00, 0xcd, 0x2e, 0xce, 0xb0, 0x77, 0x63, 0xda, 0x9d, 0x0d, 0xb2, 0xf1, 0x0e,
	0x7b, 0x5e, 0x37, 0x69, 0xa4, 0xd9, 0x45, 0xee, 0xc4, 0xa7, 0x30, 0x3c, 0x11, 0xe7, 0x62, 0x6d,
	0xe8, 0x7e, 0xed, 0xc9, 0xcf, 0x00, 0x0e, 0xac, 0xa6, 0x37, 0x6c, 0x2e, 0xcf, 0xa5, 0xd9, 0x70,
	0xed, 0x3e, 0x0c, 0xbe, 0x61, 0x71, 0x3d, 0x0a, 0xbe, 0x94, 0x73, 0x32, 0x83, 0x9e, 0xd2, 0x5c,
	0x68, 0xab, 0x67, 0x90, 0x11, 0xbf, 0xdb, 0xfb, 0x95, 0xd0, 0x97, 0xef, 0xea, 0x0e, 0x75, 0x00,
	0x92, 0x01, 0x94, 0x6c, 0x21, 0x0b, 0x66, 0xa4, 0x2a, 0x26, 0xdd, 0x6d, 0xf8, 0x69, 0xd3, 0xa1,
	0x1b, 0xa8, 0xe4, 0x0b, 0xdc, 0x6d, 0x2d, 0x86, 0xa6, 0x3f, 0x83, 0x9b, 0xa8, 0xa0, 0x9a, 0x04,
	0xd6, 0x97, 0x96, 0xeb, 0x0d, 0x80, 0x8c, 0xa1, 0x37, 0x57, 0xab, 0xc2, 0xd8, 0x2d, 0x7b, 0xd4,
	0x1d, 0xb2, 0xdf, 0x1d, 0xe8, 0x23, 0x96, 0xbc, 0x84, 0xd0, 0x85, 0x90, 0x3c, 0x48, 0xaf, 0x8a,
	0x6e, 0xba, 0x15, 0xd1, 0x78, 0xf7, 0x2e, 0xf2, 0x11, 0xfa, 0x18, 0x0b, 0xf2, 0xf0, 0x6a, 0x82,
	0xed, 0x3c, 0xc6, 0x8f, 0xfe, 0x81, 0x42, 0x99, 0xaf, 0x20, 0x74, 0x6f, 0xf9, 0xb7, 0xbd, 0xb6,
	0x5e, 0x3a, 0xbe, 0xed, 0xf7, 0x6a, 0x08, 0x0a, 0xcc, 0xeb, 0xda, 0x42, 0xf2, 0x7c, 0xcf, 0xd5,
	0xad, 0x08, 0xc4, 0x2f, 0xfe, 0x13, 0x8d, 0xf7, 0x3d, 0x85, 0xf0, 0x43, 0xc9, 0x6b, 0x23, 0x77,
	0x3d, 0x6a, 0x99, 0x76, 0x1c, 0x7d, 0xf6, 0x3f, 0x8c, 0xaf, 0xa1, 0xfd, 0x2f, 0x38, 0xfa, 0x13,
	0x00, 0x00, 0xff, 0xff, 0x9c, 0x6e, 0x78, 0x16, 0x5c, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProductClient is the client API for Product service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*domain.Product, error)
	GetByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*GetByIDResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*domain.Response, error)
	GetByFacilityID(ctx context.Context, in *GetByFacilityIDRequest, opts ...grpc.CallOption) (*GetByFacilityIDResponse, error)
	Update(ctx context.Context, in *domain.Product, opts ...grpc.CallOption) (*domain.Product, error)
}

type productClient struct {
	cc *grpc.ClientConn
}

func NewProductClient(cc *grpc.ClientConn) ProductClient {
	return &productClient{cc}
}

func (c *productClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*domain.Product, error) {
	out := new(domain.Product)
	err := c.cc.Invoke(ctx, "/service.main.product.Product/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) GetByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*GetByIDResponse, error) {
	out := new(GetByIDResponse)
	err := c.cc.Invoke(ctx, "/service.main.product.Product/GetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*domain.Response, error) {
	out := new(domain.Response)
	err := c.cc.Invoke(ctx, "/service.main.product.Product/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) GetByFacilityID(ctx context.Context, in *GetByFacilityIDRequest, opts ...grpc.CallOption) (*GetByFacilityIDResponse, error) {
	out := new(GetByFacilityIDResponse)
	err := c.cc.Invoke(ctx, "/service.main.product.Product/GetByFacilityID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) Update(ctx context.Context, in *domain.Product, opts ...grpc.CallOption) (*domain.Product, error) {
	out := new(domain.Product)
	err := c.cc.Invoke(ctx, "/service.main.product.Product/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductServer is the server API for Product service.
type ProductServer interface {
	Create(context.Context, *CreateRequest) (*domain.Product, error)
	GetByID(context.Context, *GetByIDRequest) (*GetByIDResponse, error)
	Delete(context.Context, *DeleteRequest) (*domain.Response, error)
	GetByFacilityID(context.Context, *GetByFacilityIDRequest) (*GetByFacilityIDResponse, error)
	Update(context.Context, *domain.Product) (*domain.Product, error)
}

// UnimplementedProductServer can be embedded to have forward compatible implementations.
type UnimplementedProductServer struct {
}

func (*UnimplementedProductServer) Create(ctx context.Context, req *CreateRequest) (*domain.Product, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedProductServer) GetByID(ctx context.Context, req *GetByIDRequest) (*GetByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByID not implemented")
}
func (*UnimplementedProductServer) Delete(ctx context.Context, req *DeleteRequest) (*domain.Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedProductServer) GetByFacilityID(ctx context.Context, req *GetByFacilityIDRequest) (*GetByFacilityIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByFacilityID not implemented")
}
func (*UnimplementedProductServer) Update(ctx context.Context, req *domain.Product) (*domain.Product, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}

func RegisterProductServer(s *grpc.Server, srv ProductServer) {
	s.RegisterService(&_Product_serviceDesc, srv)
}

func _Product_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.main.product.Product/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Product_GetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).GetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.main.product.Product/GetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).GetByID(ctx, req.(*GetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Product_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.main.product.Product/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Product_GetByFacilityID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByFacilityIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).GetByFacilityID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.main.product.Product/GetByFacilityID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).GetByFacilityID(ctx, req.(*GetByFacilityIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Product_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.Product)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.main.product.Product/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).Update(ctx, req.(*domain.Product))
	}
	return interceptor(ctx, in, info, handler)
}

var _Product_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.main.product.Product",
	HandlerType: (*ProductServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Product_Create_Handler,
		},
		{
			MethodName: "GetByID",
			Handler:    _Product_GetByID_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Product_Delete_Handler,
		},
		{
			MethodName: "GetByFacilityID",
			Handler:    _Product_GetByFacilityID_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Product_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service/main/product/product.proto",
}
